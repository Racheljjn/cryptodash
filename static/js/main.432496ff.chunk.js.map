{"version":3,"sources":["App/AppLayout.js","App/AppProvider.js","App/AppBar.js","Settings/Welcome.jsx","Shared/Styles.js","Settings/ConfirmButton.js","Shared/Page.js","Shared/Tile.js","Settings/CoinHeaderGrid.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/Search.js","Settings/index.js","Shared/Content.js","Dashboard/CoinSpotlight.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Dashboard/HighchartsConfig.js","Dashboard/PriceChart.js","Dashboard/HighchartsTheme.js","Dashboard/index.js","App/index.js","serviceWorker.js","index.js"],"names":["styled","div","cc","require","AppContext","React","createContext","AppProvider","props","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","a","coinList","Data","setState","state","firstVisit","prices","filter","price","Object","keys","length","historical","results","name","currentFavorite","data","map","ticker","index","moment","subtract","timeInterval","valueOf","USD","returnData","i","favorites","priceFull","priceData","push","console","warn","promises","units","priceHistorical","toDate","Promise","all","addCoin","key","removeCoin","_","pull","isInFavorites","includes","confirmFavorites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","sym","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","savedSettings","cryptoDashData","Provider","this","children","Component","Logo","Bar","ControlButtonElem","active","css","ControlButton","Consumer","lower","onClick","charAt","toUpperCase","substr","WelcomeMessage","lightTheme","theme","color3","lightBlueBackground","backgroundColor2","subtleBoxShadow","greenBoxShadow","ConfirmButtonStyled","CenterDiv","Tile","SelectableTile","DeletableTile","DisabledTile","CoinHeaderGridStyled","CoinSymbol","DeleteIcon","symbol","topSection","CoinImage","img","spotlight","coin","alt","Symbol","src","ImageUrl","clickCoinHandler","coinKey","TileClass","CoinHeaderGrid","CoinName","CoinGridStyled","getCoin","slice","getLowerSectionCoins","CoinTile","SearchGrid","SearchInput","input","handleFilter","debounce","inputValue","coinSymbols","coinNames","allStringToSearch","concat","fuzzyResults","fuzzy","result","string","pickBy","symKey","coinName","onKeyUp","e","target","filterCoins","Page","Welcome","CoinGrid","ConfirmButton","Search","SpotLightName","h2","PriceTileStyled","compact","ChangePercent","JustifyRight","ChangePct","red","CHANGEPCT24HOUR","numberFormat","JustifyLeft","TickerPrice","number","PriceTile","PRICE","PriceTileCompact","PriceGrid","title","text","subtitle","yAxis","xAxis","type","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","ReactHighcharts","Highcharts","setOptions","colors","chart","backgroundColor","style","color","font","credits","enabled","itemStyle","itemHoverStyle","config","highchartsConfig","CoinSpotlight","PriceChart","App","AppLayout","AppBar","Content","Settings","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.432496ff.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\npadding:40px\r\n`","import React from 'react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nconst cc = require('cryptocompare');\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst MAX_FAVORITES = 10;\r\nconst TIME_UNITS = 10;\r\n\r\nexport class AppProvider extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      page: 'dashboard',\r\n      favorites: ['BTC', 'ETH', 'XMR', 'DOGE'],\r\n      timeInterval: 'months',\r\n      ...this.savedSettings(),\r\n      setPage: this.setPage,\r\n      addCoin: this.addCoin,\r\n      removeCoin: this.removeCoin,\r\n      isInFavorites: this.isInFavorites,\r\n      confirmFavorites: this.confirmFavorites,\r\n      setCurrentFavorite: this.setCurrentFavorite,\r\n      setFilteredCoins: this.setFilteredCoins,\r\n      changeChartSelect: this.changeChartSelect\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.fetchCoins();\r\n    this.fetchPrices();\r\n    this.fetchHistorical();\r\n  }\r\n\r\n  fetchCoins = async () => {\r\n    let coinList = (await cc.coinList()).Data;\r\n    this.setState({coinList});\r\n  }\r\n\r\n  fetchPrices = async () => {\r\n    if(this.state.firstVisit) return;\r\n    let prices = await this.prices();\r\n    prices = prices.filter(price => Object.keys(price).length);\r\n    this.setState({prices});\r\n  }\r\n\r\n  fetchHistorical = async () => {\r\n    if (this.state.firstVisit) return;\r\n    let results = await this.historical();\r\n    let historical = [\r\n      {\r\n        name: this.state.currentFavorite,\r\n        data: results.map((ticker, index) => [\r\n          moment().subtract({[this.state.timeInterval]: TIME_UNITS - index}).valueOf(),\r\n          ticker.USD\r\n        ])\r\n      }\r\n    ]\r\n    this.setState({historical});\r\n  }\r\n\r\n  prices = async () => {\r\n    let returnData = [];\r\n    for(let i = 0; i < this.state.favorites.length; i++){\r\n      try {\r\n        let priceData = await cc.priceFull(this.state.favorites[i], 'USD');\r\n        returnData.push(priceData);\r\n      } catch (e){\r\n        console.warn('Fetch price error: ', e);\r\n      }\r\n    }\r\n    return returnData;\r\n  }\r\n\r\n  historical = () => {\r\n    let promises = [];\r\n    for (let units = TIME_UNITS; units > 0; units--){\r\n      promises.push(\r\n        cc.priceHistorical(\r\n          this.state.currentFavorite,\r\n          ['USD'],\r\n          moment()\r\n          .subtract({[this.state.timeInterval]: units})\r\n          .toDate()\r\n        )\r\n      )\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  addCoin = key => {\r\n    let favorites = [...this.state.favorites];\r\n    if(favorites.length < MAX_FAVORITES){\r\n      favorites.push(key);\r\n      this.setState({favorites});\r\n    }\r\n  }\r\n\r\n  removeCoin = key => {\r\n    let favorites = [...this.state.favorites];\r\n    this.setState({favorites: _.pull(favorites, key)})\r\n  }\r\n\r\n  isInFavorites = key => _.includes(this.state.favorites, key)\r\n\r\n  confirmFavorites = () => {\r\n    let currentFavorite = this.state.favorites[0];\r\n    this.setState({\r\n      firstVisit: false,\r\n      page: 'dashboard',\r\n      currentFavorite,\r\n      prices: null,\r\n      historical: null\r\n    }, () => {\r\n        this.fetchPrices();\r\n        this.fetchHistorical();\r\n    });\r\n    localStorage.setItem('cryptoDash', JSON.stringify({\r\n      favorites: this.state.favorites,\r\n      currentFavorite\r\n    }));\r\n  }\r\n\r\n  setCurrentFavorite = (sym) => {\r\n    this.setState({\r\n      currentFavorite: sym,\r\n      historical: null\r\n    }, this.fetchHistorical);\r\n\r\n    localStorage.setItem('cryptoDash', JSON.stringify({\r\n      ...JSON.parse(localStorage.getItem('cryptoDash')),\r\n      currentFavorite: sym\r\n    }))\r\n  }\r\n\r\n  savedSettings(){\r\n    let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\r\n    if(!cryptoDashData){\r\n      return {page: 'settings', firstVisit: true}\r\n    }\r\n    let {favorites, currentFavorite} = cryptoDashData;\r\n    return {favorites, currentFavorite};\r\n  }\r\n\r\n  setPage = page => this.setState({page})\r\n\r\n  setFilteredCoins = (filteredCoins) => this.setState({filteredCoins})\r\n\r\n  changeChartSelect = (value) => {\r\n    this.setState({timeInterval: value, historical: null}, this.fetchHistorical);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    )\r\n  }\r\n\r\n}\r\n","import React from 'react'\r\nimport styled , {css} from 'styled-components'\r\nimport {AppContext} from './AppProvider'\r\n\r\nconst Logo = styled.div`\r\nfont-size:1.6em\r\n`\r\nconst Bar = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns:180px auto 100px 100px\r\n\r\n`\r\nconst ControlButtonElem = styled.div`\r\ncursor:pointer;\r\npadding:10px;\r\n${props=>props.active && css`\r\nborder:solid 2px white;\r\n`}\r\n`\r\n\r\nfunction toProperCase (lower){\r\n return lower.charAt(0).toUpperCase() + lower.substr(1)\r\n}\r\nconst ControlButton = ({name})=>{\r\n \r\n return (\r\n  <AppContext.Consumer>\r\n   {({page,setPage})=>(\r\n  <ControlButtonElem \r\n  onClick={()=>{\r\n   setPage(name)}}\r\n  active={page === name}>\r\n   {toProperCase(name)}\r\n   </ControlButtonElem>\r\n   )}\r\n  </AppContext.Consumer>\r\n )\r\n\r\n}\r\n\r\n\r\nexport default function(){\r\n return <Bar>\r\n  <Logo>CryptoDashboard</Logo>\r\n  <div/>\r\n  <ControlButton name=\"dashboard\"/>\r\n  <ControlButton name=\"settings\"/>\r\n </Bar>\r\n\r\n}","import React from 'react'\r\nimport { AppContext } from '../App/AppProvider';\r\n\r\nfunction WelcomeMessage({firstVisit}){\r\n return <AppContext.Consumer>\r\n    {\r\n     ({firstVisit})=>\r\n     firstVisit?\r\n     <div>\r\n       Welcome to CryptoDashboard,please select your favorite coin and confirm favorite to get your own dashboard\r\n     </div>:null\r\n    }\r\n\r\n   </AppContext.Consumer>\r\n  \r\n  \r\n \r\n}\r\n\r\nexport default WelcomeMessage;","const theme = 'dark';\r\n//const theme = 'light';\r\nexport const lightTheme = theme === 'light';\r\n\r\nexport const color = lightTheme ? 'white' : '#4d5462';\r\nexport const color2 = lightTheme ? 'white' : '#010e2c';\r\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\r\n\r\nif (lightTheme) {\r\n document.body.style.background = '#e1eaee';\r\n document.body.style.color = '#061a44';\r\n}\r\n\r\nexport const lightBlueBackground = `background-color: ${color}`;\r\nexport const backgroundColor2 = `background-color: ${color2};`;\r\nexport const greenBackgroundColor = `background-color: ${color3};`;\r\n\r\nexport const fontColorGreen = `color: #03A9F4`;\r\nexport const fontColorWhite = `color: white`;\r\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#8dd36e'}`;\r\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\r\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\r\n\r\nexport const fontSizeBig = 'font-size: 2em';\r\nexport const fontSize1 = 'font-size: 1.5em;';\r\nexport const fontSize2 = 'font-size: 1.0em';\r\nexport const fontSize3 = 'font-size: .75em';\r\n\r\nexport const textAlignCenter = 'text-align: center;'","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {AppContext} from '../App/AppProvider'\r\nimport {fontSize1, greenBoxShadow, color3} from '../Shared/Styles'\r\n\r\nconst ConfirmButtonStyled = styled.div`\r\nmargin:20px;\r\ncolor:${color3};\r\n${fontSize1}\r\ncursor:pointer;\r\n&:hover{\r\n ${greenBoxShadow}\r\n}\r\n`\r\nconst CenterDiv = styled.div`\r\ndisplay:grid;\r\njustify-content:center\r\n`\r\n\r\nexport default function(){\r\n return <AppContext.Consumer>\r\n  {({confirmFavorites})=>\r\n  <CenterDiv>\r\n   <ConfirmButtonStyled onClick={confirmFavorites}>\r\n     Confirm Favorites\r\n   </ConfirmButtonStyled>\r\n  </CenterDiv>\r\n  \r\n  }\r\n </AppContext.Consumer>\r\n\r\n}","import React from 'react'\r\nimport {AppContext} from '../App/AppProvider'\r\n\r\nexport default function({name,children}){\r\n return (<AppContext.Consumer>\r\n  {({page})=>{\r\n\r\n   if(page!==name){\r\n\r\n    return null\r\n   }\r\n\r\n    return <div>{children}</div>\r\n   \r\n\r\n  }}\r\n </AppContext.Consumer>)\r\n\r\n}","import styled from 'styled-components'\r\nimport {subtleBoxShadow, lightBlueBackground, greenBoxShadow, redBoxShadow} from './Styles'\r\n\r\nexport const Tile = styled.div`\r\n${subtleBoxShadow}\r\n${lightBlueBackground}\r\npadding:10px;\r\n`\r\nexport const SelectableTile = styled(Tile)`\r\n &:hover{\r\n   cursor:pointer;\r\n   ${greenBoxShadow}\r\n }\r\n\r\n`\r\n\r\nexport const DeletableTile = styled(SelectableTile)`\r\n &:hover{\r\n  ${redBoxShadow}\r\n }\r\n`\r\nexport const DisabledTile = styled(Tile)`\r\n pointer-events:none;\r\n opacity:0.4\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {DeletableTile} from '../Shared/Tile'\r\n\r\nexport const CoinHeaderGridStyled = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: 1fr 1fr\r\n`\r\n\r\nexport const CoinSymbol = styled.div`\r\njustify-self: right\r\n`\r\nexport const DeleteIcon = styled.div`\r\njustify-self: right;\r\ndisplay:none;\r\n${DeletableTile}:hover & {\r\n display:block;\r\n color:red\r\n}\r\n`\r\n\r\nexport default function({name, symbol,topSection}){\r\n return <CoinHeaderGridStyled>\r\n  <div>{name}</div>\r\n  {\r\n   topSection ? (<DeleteIcon> X </DeleteIcon>)\r\n   :(\r\n     <CoinSymbol>{symbol}</CoinSymbol>\r\n   )}\r\n\r\n </CoinHeaderGridStyled>\r\n\r\n}","import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\n\r\nconst CoinImage = styled.img`\r\nheight:50px;\r\n${props=>props.spotlight && css`\r\nheight:200px;\r\ndisplay:block;\r\nmargin:auto;\r\n`}\r\n`\r\n\r\nexport default function({coin,spotlight}){\r\n  return <CoinImage\r\n  spotlight={spotlight}\r\n  alt={coin.Symbol}\r\n  src={`http://cryptocompare.com/${coin.ImageUrl}`}\r\n  />\r\n}","import React from 'react'\r\nimport {AppContext} from '../App/AppProvider'\r\nimport {SelectableTile, DisabledTile, DeletableTile} from '../Shared/Tile'\r\nimport CoinHeaderGrid from './CoinHeaderGrid'\r\nimport CoinImage from '../Shared/CoinImage'\r\n\r\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin ){\r\n return topSection ? ()=>{removeCoin(coinKey)}\r\n : ()=>{addCoin(coinKey)}\r\n}\r\nexport default function({coinKey,topSection}){\r\n\r\n \r\n return <AppContext.Consumer>\r\n  {({ coinList, addCoin, removeCoin, isInFavorites})=>{\r\n   let coin = coinList[coinKey]\r\n   let TileClass = SelectableTile\r\n   if(topSection){\r\n    TileClass = DeletableTile\r\n   }else if (isInFavorites(coinKey)){\r\n    TileClass = DisabledTile\r\n   }\r\n\r\n   \r\n   return <TileClass onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}>\r\n     <CoinHeaderGrid topSection={topSection} name={coin.CoinName} symbol={coin.Symbol}/>\r\n     <CoinImage coin={coin}/>\r\n   </TileClass>\r\n   \r\n  }}\r\n </AppContext.Consumer>\r\n\r\n}","import { filter } from 'lodash'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { AppContext } from '../App/AppProvider'\r\nimport {Tile} from '../Shared/Tile'\r\nimport {SelectableTile} from '../Shared/Tile'\r\nimport CoinTile from './CoinTile'\r\n\r\nexport const CoinGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\r\n  grid-gap:15px;\r\n  margin-top:40px\r\n`\r\nfunction getLowerSectionCoins(coinList, filteredCoins){\r\n return (filteredCoins && Object.keys(filteredCoins)) || \r\n Object.keys(coinList).slice(0, 100)\r\n\r\n}\r\nfunction getCoin(coinList, topSection, favorites, filteredCoins){\r\n return topSection ? favorites : getLowerSectionCoins(coinList, filteredCoins)\r\n\r\n}\r\n\r\nexport default function ({topSection, favorites}) {\r\n  return <AppContext.Consumer>\r\n      {({ coinList, favorites, filteredCoins }) => (<CoinGridStyled>\r\n          {getCoin(coinList, topSection, favorites, filteredCoins).map(coinKey => {\r\n            return <CoinTile key={coinKey} topSection={topSection} coinKey={coinKey}/>\r\n          })\r\n          }\r\n        </CoinGridStyled>\r\n      )}\r\n    </AppContext.Consumer>\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {backgroundColor2, fontSize2} from '../Shared/Styles'\r\nimport {AppContext} from '../App/AppProvider'\r\nimport _ from 'lodash'\r\nimport fuzzy from 'fuzzy'\r\n\r\nconst SearchGrid = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: 200px 1fr;\r\n`\r\nconst SearchInput = styled.input`\r\n${backgroundColor2}\r\n${fontSize2}\r\nborder: 1px solid;\r\ncolor:#1163c9;\r\nheight:25px;\r\nplace-self: center left\r\n\r\n`\r\n\r\nconst handleFilter = _.debounce((inputValue, coinList, setFilteredCoins) =>{\r\n   let coinSymbols = Object.keys(coinList)\r\n   let coinNames = coinSymbols.map(sym => coinList[sym].CoinName)\r\n   let allStringToSearch = coinSymbols.concat(coinNames)\r\n   let fuzzyResults = fuzzy\r\n   .filter(inputValue, allStringToSearch, {})\r\n   .map(result => result.string)\r\n   let filteredCoins = _.pickBy(coinList, (result, symKey)=>{\r\n    let coinName = result.CoinName\r\n    return (_.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName))   \r\n   })\r\n   setFilteredCoins(filteredCoins)\r\n}, 500)\r\n\r\nfunction filterCoins (e, setFilteredCoins, coinList){\r\n let inputValue = e.target.value\r\n if(!inputValue){\r\n  setFilteredCoins(null)\r\n  return\r\n }\r\n handleFilter(inputValue, coinList, setFilteredCoins)\r\n\r\n\r\n}\r\n\r\nexport default function(){\r\n return (<AppContext.Consumer>\r\n  {({setFilteredCoins, coinList})=>\r\n   <SearchGrid>\r\n      <h2>Search all coins</h2>\r\n      <SearchInput onKeyUp={(e)=>filterCoins(e, setFilteredCoins, coinList)}/>\r\n   </SearchGrid>\r\n  }\r\n </AppContext.Consumer>)\r\n}","import React from 'react'\r\nimport WelcomeMessage from './Welcome'\r\nimport ConfirmButton from './ConfirmButton'\r\nimport Page from '../Shared/Page'\r\nimport CoinGrid from './CoinGrid'\r\nimport Search from './Search'\r\n\r\nexport default function(){\r\n return <Page name=\"settings\">\r\n  <WelcomeMessage />\r\n  <CoinGrid topSection />\r\n  <ConfirmButton/>  \r\n  <Search />\r\n  <CoinGrid/>\r\n  </Page>\r\n}\r\n","import React from 'react'\r\nimport {AppContext} from '../App/AppProvider'\r\n\r\nexport default function(props){\r\n return <AppContext.Consumer>\r\n  {({coinList, prices, firstVisit})=>{\r\n   if(!coinList){\r\n    return <div>Loading Coins</div>\r\n   }\r\n   if(!firstVisit && !prices){\r\n    return <div>Loading Prices</div>\r\n\r\n   }\r\n  \r\n   return <div>{props.children}</div>\r\n  }}\r\n </AppContext.Consumer>\r\n\r\n}","import React from 'react'\r\nimport {Tile} from '../Shared/Tile'\r\nimport styled from 'styled-components'\r\nimport {AppContext} from '../App/AppProvider'\r\nimport CoinImage from '../Shared/CoinImage'\r\n\r\nconst SpotLightName = styled.h2`\r\ntext-align:center\r\n`\r\n\r\nexport default function (){\r\n return (<AppContext.Consumer>\r\n  {({currentFavorite, coinList})=>{\r\n   return <Tile>\r\n     <SpotLightName>{coinList[currentFavorite].CoinName} </SpotLightName>\r\n     <CoinImage spotlight coin={coinList[currentFavorite]}/>\r\n    </Tile>\r\n  }}\r\n \r\n </AppContext.Consumer>\r\n )\r\n}","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { SelectableTile } from '../Shared/Tile'\r\nimport { fontSize3, greenBoxShadow } from '../Shared/Styles'\r\nimport { CoinHeaderGridStyled } from '../Settings/CoinHeaderGrid'\r\nimport { fontSizeBig } from '../Shared/Styles'\r\nimport {AppContext} from '../App/AppProvider'\r\n\r\nconst PriceTileStyled = styled(SelectableTile)`\r\n  ${props =>\r\n    props.compact &&\r\n    css`\r\n      display: grid;\r\n      ${fontSize3}\r\n      grid-gap:5px;\r\n      grid-template-columns: repeat(3, 1fr);\r\n      justify-items: right;\r\n    `}\r\n    ${props=>props.currentFavorite && css`\r\n    ${greenBoxShadow}\r\n    pointer-events: none\r\n    `}\r\n`\r\n\r\nfunction ChangePercent ({ data }) {\r\n  return (\r\n    <JustifyRight>\r\n      <ChangePct red={data.CHANGEPCT24HOUR < 0}>\r\n        {numberFormat(data.CHANGEPCT24HOUR)}%\r\n      </ChangePct>\r\n    </JustifyRight>\r\n  )\r\n}\r\nconst JustifyRight = styled.div`\r\n  justify-self: right;\r\n`\r\nconst JustifyLeft = styled.div`\r\n  justify-self: left;\r\n`\r\n\r\nconst TickerPrice = styled.div`\r\n  ${fontSizeBig}\r\n`\r\n\r\nconst ChangePct = styled.div`\r\n  color: green;\r\n  ${props =>\r\n    props.red &&\r\n    css`\r\n      color: red;\r\n    `}\r\n`\r\nconst numberFormat = number => {\r\n  return +(number + '').slice(0, 7)\r\n}\r\n\r\nfunction PriceTile ({ sym, data, currentFavorite, setCurrentFavorite }) {\r\n  return (\r\n    <PriceTileStyled onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\r\n      <CoinHeaderGridStyled>\r\n        <div>{sym}</div>\r\n     \r\n      <ChangePercent data={data} />\r\n    </CoinHeaderGridStyled>\r\n\r\n      <TickerPrice>${numberFormat(data.PRICE)}</TickerPrice>\r\n    </PriceTileStyled>\r\n  )\r\n}\r\n\r\nfunction PriceTileCompact ({ sym, data, currentFavorite, setCurrentFavorite }) {\r\n  return (\r\n    <PriceTileStyled compact onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\r\n      <JustifyLeft>\r\n        <div>{sym}</div>\r\n      </JustifyLeft>\r\n      <ChangePercent data={data} />\r\n\r\n      <div>${numberFormat(data.PRICE)}</div>\r\n    </PriceTileStyled>\r\n  )\r\n}\r\n\r\nexport default function ({ price, index }) {\r\n  let sym = Object.keys(price)[0]\r\n  let data = price[sym]['USD']\r\n  let TileClass = index < 5 ? PriceTile : PriceTileCompact\r\n  return (\r\n   <AppContext.Consumer>\r\n    {({currentFavorite, setCurrentFavorite})=> \r\n    <TileClass sym={sym} data={data} currentFavorite={currentFavorite === sym}setCurrentFavorite={()=>setCurrentFavorite(sym)}>\r\n      {sym} {data.PRICE}\r\n    </TileClass>\r\n    }\r\n   </AppContext.Consumer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {AppContext} from '../App/AppProvider'\r\nimport PriceTile from './PriceTile'\r\n\r\nconst PriceGrid = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: repeat(5, 1fr);\r\ngrid-gap: 15px;\r\nmargin: 40px auto\r\n`\r\n\r\nexport default function(){\r\n return (<AppContext.Consumer>\r\n  {({prices})=>{\r\n   return (<PriceGrid>\r\n    {prices.map((price,index) => {return <PriceTile index={index} price={price}/>})}\r\n   </PriceGrid>)\r\n  }}\r\n </AppContext.Consumer>)\r\n}","\r\n\r\nexport default function(historical){\r\n return {\r\n \r\n\r\n   title: {\r\n    text: 'Solar Employment Growth by Sector, 2010-2016'\r\n   },\r\n\r\n   subtitle: {\r\n    text: 'Source: thesolarfoundation.com'\r\n   },\r\n\r\n   yAxis: {\r\n    title: {\r\n     text: 'Number of Employees'\r\n    }\r\n   },\r\n\r\n   xAxis: {\r\n    type:'datetime'\r\n   },\r\n\r\n   legend: {\r\n    layout: 'vertical',\r\n    align: 'right',\r\n    verticalAlign: 'middle'\r\n   },\r\n\r\n   plotOptions: {\r\n    series: {\r\n     label: {\r\n      connectorAllowed: false\r\n     },\r\n     pointStart: 2010\r\n    }\r\n   },\r\n\r\n   series: historical,\r\n   responsive: {\r\n    rules: [{\r\n     condition: {\r\n      maxWidth: 500\r\n     },\r\n     chartOptions: {\r\n      legend: {\r\n       layout: 'horizontal',\r\n       align: 'center',\r\n       verticalAlign: 'bottom'\r\n      }\r\n     }\r\n    }]\r\n   }\r\n\r\n  \r\n\r\n\r\n }\r\n \r\n}\r\n","import highchartsConfig from './HighchartsConfig'\r\nimport React from 'react'\r\nimport {Tile} from '../Shared/Tile'\r\nimport {AppContext} from '../App/AppProvider'\r\nimport ReactHighcharts from 'react-highcharts'\r\nimport HighchartsTheme from './HighchartsTheme'\r\n\r\nReactHighcharts.Highcharts.setOptions(HighchartsTheme)\r\n\r\nexport default function(){\r\n return (<AppContext.Consumer>\r\n  {({historical})=>{\r\n   return <Tile>\r\n    <ReactHighcharts config={highchartsConfig(historical)} />\r\n   </Tile>\r\n  }}\r\n  \r\n </AppContext.Consumer>\r\n\r\n )\r\n}","export default {\r\n colors: ['#058DC7', '#50B432', '#ED561B', '#DDDF00', '#24CBE5', '#64E572',\r\n  '#FF9655', '#FFF263', '#6AF9C4'],\r\n  chart: {\r\n  backgroundColor:'#061a44'\r\n },\r\n title: {\r\n  style: {\r\n   color: '#000',\r\n    font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\r\n  }\r\n },\r\n subtitle: {\r\n  style: {\r\n   color: '#666666',\r\n    font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\r\n  }\r\n },\r\n credits:{\r\n  enabled: false\r\n },\r\n legend: {\r\n  itemStyle: {\r\n   font: '9pt Trebuchet MS, Verdana, sans-serif',\r\n    color: 'black'\r\n  },\r\n  itemHoverStyle: {\r\n   color: 'gray'\r\n  }\r\n }\r\n};\r\n","import React from 'react'\r\nimport Page from '../Shared/Page'\r\nimport CoinSpotlight from './CoinSpotlight'\r\nimport PriceGrid from './PriceGrid'\r\nimport PriceChart from './PriceChart'\r\n\r\n\r\n\r\nexport default function () {\r\n return <Page name=\"dashboard\">\r\n  <PriceGrid/>\r\n  <CoinSpotlight/>\r\n  <PriceChart/>\r\n </Page>\r\n}","import React, { Component } from 'react';\nimport AppLayout from './AppLayout'\nimport AppBar from './AppBar'\nimport {AppProvider} from './AppProvider'\nimport Settings from '../Settings'\nimport Content from '../Shared/Content'\nimport './App.css';\nimport Dashboard from '../Dashboard';\n\n\nclass App extends Component {\n  \n\n\n  render(){\n\n    return (\n      <AppLayout>\n        <AppProvider>\n          <AppBar/>\n          <Content>\n            <Settings/>\n            <Dashboard/>\n          </Content>         \n        </AppProvider>\n      </AppLayout>\n    );\n      \n  }\n    \n  }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}